name: Full GitHub Actions CI/CD Demo

# Triggers
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:       # Manual trigger
  schedule:
    - cron: '0 2 * * 1'     # Every Monday at 2 AM UTC

# Define environment-wide variables
env:
  GLOBAL_VAR: 'I am global'

jobs:
  build:
    name: Build Job
    runs-on: ubuntu-latest

    # Save and restore cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Export local variable
        run: echo "LOCAL_VAR=I am local" >> $GITHUB_ENV

      - name: Use env vars
        run: echo "Global: $GLOBAL_VAR, Local: $LOCAL_VAR"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  test:
    name: Test Job
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18]     # Parallel runs

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm ci
      - run: npm test

  lint:
    name: Lint Job
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run on push
    steps:
      - uses: actions/checkout@v3
      - run: npm run lint

  deploy:
    name: Deploy Job
    runs-on: ubuntu-latest
    needs: [test, lint]
    environment:
      name: production
      url: https://your-production-site.com

    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: ./build

      - name: Deploy to server
        run: echo "Deploying to production..."
        env:
          API_KEY: ${{ secrets.DEPLOY_API_KEY }}
